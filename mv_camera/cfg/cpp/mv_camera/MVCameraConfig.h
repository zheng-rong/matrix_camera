//#line 2 "/opt/ros/indigo/share/dynamic_reconfigure/templates/ConfigType.h.template"
// *********************************************************
// 
// File autogenerated for the mv_camera package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

#ifndef __mv_camera__MVCAMERACONFIG_H__
#define __mv_camera__MVCAMERACONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace mv_camera
{
  class MVCameraConfigStatics;
  
  class MVCameraConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(MVCameraConfig &config, const MVCameraConfig &max, const MVCameraConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const MVCameraConfig &config1, const MVCameraConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, MVCameraConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const MVCameraConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, MVCameraConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const MVCameraConfig &config) const = 0;
      virtual void getValue(const MVCameraConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T MVCameraConfig::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (MVCameraConfig::* field);

      virtual void clamp(MVCameraConfig &config, const MVCameraConfig &max, const MVCameraConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const MVCameraConfig &config1, const MVCameraConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, MVCameraConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const MVCameraConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, MVCameraConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const MVCameraConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const MVCameraConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, MVCameraConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string name, std::string type, int parent, int id, bool s, T PT::* f) : AbstractGroupDescription(name, type, parent, id, s), field(f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, MVCameraConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<MVCameraConfig::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(MVCameraConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("guid"==(*_i)->name){guid = boost::any_cast<std::string>(val);}
        if("frame_id"==(*_i)->name){frame_id = boost::any_cast<std::string>(val);}
        if("pixel_clock"==(*_i)->name){pixel_clock = boost::any_cast<double>(val);}
        if("frame_rate"==(*_i)->name){frame_rate = boost::any_cast<double>(val);}
        if("camera_info_url"==(*_i)->name){camera_info_url = boost::any_cast<std::string>(val);}
        if("binning_x"==(*_i)->name){binning_x = boost::any_cast<int>(val);}
        if("binning_y"==(*_i)->name){binning_y = boost::any_cast<int>(val);}
        if("roi_width"==(*_i)->name){roi_width = boost::any_cast<int>(val);}
        if("roi_height"==(*_i)->name){roi_height = boost::any_cast<int>(val);}
        if("x_offset"==(*_i)->name){x_offset = boost::any_cast<int>(val);}
        if("y_offset"==(*_i)->name){y_offset = boost::any_cast<int>(val);}
        if("color_coding"==(*_i)->name){color_coding = boost::any_cast<std::string>(val);}
        if("bayer_method"==(*_i)->name){bayer_method = boost::any_cast<std::string>(val);}
        if("exposure"==(*_i)->name){exposure = boost::any_cast<int>(val);}
        if("shutter_auto"==(*_i)->name){shutter_auto = boost::any_cast<bool>(val);}
        if("shutter_auto_min"==(*_i)->name){shutter_auto_min = boost::any_cast<double>(val);}
        if("shutter_auto_max"==(*_i)->name){shutter_auto_max = boost::any_cast<double>(val);}
        if("shutter"==(*_i)->name){shutter = boost::any_cast<double>(val);}
        if("gain_auto"==(*_i)->name){gain_auto = boost::any_cast<bool>(val);}
        if("gain_auto_min"==(*_i)->name){gain_auto_min = boost::any_cast<double>(val);}
        if("gain_auto_max"==(*_i)->name){gain_auto_max = boost::any_cast<double>(val);}
        if("gain"==(*_i)->name){gain = boost::any_cast<double>(val);}
        if("auto_control_speed"==(*_i)->name){auto_control_speed = boost::any_cast<std::string>(val);}
        if("auto_query_values"==(*_i)->name){auto_query_values = boost::any_cast<bool>(val);}
        if("hdr_mode"==(*_i)->name){hdr_mode = boost::any_cast<std::string>(val);}
        if("use_ros_time"==(*_i)->name){use_ros_time = boost::any_cast<bool>(val);}
        if("embed_image_info"==(*_i)->name){embed_image_info = boost::any_cast<bool>(val);}
      }
    }

    std::string guid;
std::string frame_id;
double pixel_clock;
double frame_rate;
std::string camera_info_url;
int binning_x;
int binning_y;
int roi_width;
int roi_height;
int x_offset;
int y_offset;
std::string color_coding;
std::string bayer_method;
int exposure;
bool shutter_auto;
double shutter_auto_min;
double shutter_auto_max;
double shutter;
bool gain_auto;
double gain_auto_min;
double gain_auto_max;
double gain;
std::string auto_control_speed;
bool auto_query_values;
std::string hdr_mode;
bool use_ros_time;
bool embed_image_info;

    bool state;
    std::string name;

    
}groups;



//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string guid;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string frame_id;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double pixel_clock;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double frame_rate;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string camera_info_url;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int binning_x;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int binning_y;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int roi_width;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int roi_height;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int x_offset;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int y_offset;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string color_coding;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string bayer_method;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      int exposure;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      bool shutter_auto;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double shutter_auto_min;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double shutter_auto_max;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double shutter;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      bool gain_auto;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double gain_auto_min;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double gain_auto_max;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      double gain;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string auto_control_speed;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      bool auto_query_values;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      std::string hdr_mode;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      bool use_ros_time;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      bool embed_image_info;
//#line 218 "/opt/ros/indigo/share/dynamic_reconfigure/templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("MVCameraConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const MVCameraConfig &__max__ = __getMax__();
      const MVCameraConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const MVCameraConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const MVCameraConfig &__getDefault__();
    static const MVCameraConfig &__getMax__();
    static const MVCameraConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const MVCameraConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void MVCameraConfig::ParamDescription<std::string>::clamp(MVCameraConfig &config, const MVCameraConfig &max, const MVCameraConfig &min) const
  {
    return;
  }

  class MVCameraConfigStatics
  {
    friend class MVCameraConfig;
    
    MVCameraConfigStatics()
    {
MVCameraConfig::GroupDescription<MVCameraConfig::DEFAULT, MVCameraConfig> Default("Default", "", 0, 0, true, &MVCameraConfig::groups);
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.guid = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.guid = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.guid = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("guid", "str", 3, "Serial number of camera, suffix CAMERA_MODEL_ + serial number (use first camera if null). e.g. BLUECOUGAR_GX002408", "", &MVCameraConfig::guid)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("guid", "str", 3, "Serial number of camera, suffix CAMERA_MODEL_ + serial number (use first camera if null). e.g. BLUECOUGAR_GX002408", "", &MVCameraConfig::guid)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.frame_id = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.frame_id = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.frame_id = "camera";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("frame_id", "str", 3, "ROS tf frame of reference, resolved with tf_prefix unless absolute.", "", &MVCameraConfig::frame_id)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("frame_id", "str", 3, "ROS tf frame of reference, resolved with tf_prefix unless absolute.", "", &MVCameraConfig::frame_id)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.pixel_clock = 6.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.pixel_clock = 57.6;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.pixel_clock = 27.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("pixel_clock", "double", 0, "Pixel clock of image sensor [MHz].", "{'enum_description': 'Pixel clocks.', 'enum': [{'srcline': 61, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 6.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_6M'}, {'srcline': 62, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 8.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_8M'}, {'srcline': 63, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 10.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_10M'}, {'srcline': 64, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 13.5, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_13M5'}, {'srcline': 65, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 20.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_20M'}, {'srcline': 66, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 24.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_24M'}, {'srcline': 67, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 27.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_27M'}, {'srcline': 68, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 32.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_32M'}, {'srcline': 69, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 37.6, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_37M6'}, {'srcline': 70, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 40.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_40M'}, {'srcline': 71, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 66.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_66M'}, {'srcline': 72, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 50.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_50M'}, {'srcline': 73, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 57.6, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_57M6'}]}", &MVCameraConfig::pixel_clock)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("pixel_clock", "double", 0, "Pixel clock of image sensor [MHz].", "{'enum_description': 'Pixel clocks.', 'enum': [{'srcline': 61, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 6.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_6M'}, {'srcline': 62, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 8.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_8M'}, {'srcline': 63, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 10.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_10M'}, {'srcline': 64, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 13.5, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_13M5'}, {'srcline': 65, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 20.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_20M'}, {'srcline': 66, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 24.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_24M'}, {'srcline': 67, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 27.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_27M'}, {'srcline': 68, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 32.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_32M'}, {'srcline': 69, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 37.6, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_37M6'}, {'srcline': 70, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 40.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_40M'}, {'srcline': 71, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 66.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_66M'}, {'srcline': 72, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 50.0, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_50M'}, {'srcline': 73, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const double', 'value': 57.6, 'ctype': 'double', 'type': 'double', 'name': 'pixel_clock_57M6'}]}", &MVCameraConfig::pixel_clock)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.frame_rate = 1.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.frame_rate = 240.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.frame_rate = 15.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("frame_rate", "double", 0, "Camera speed (frames per second).", "", &MVCameraConfig::frame_rate)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("frame_rate", "double", 0, "Camera speed (frames per second).", "", &MVCameraConfig::frame_rate)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.camera_info_url = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.camera_info_url = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.camera_info_url = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("camera_info_url", "str", 0, "Camera calibration URL for this video_mode (uncalibrated if null).", "", &MVCameraConfig::camera_info_url)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("camera_info_url", "str", 0, "Camera calibration URL for this video_mode (uncalibrated if null).", "", &MVCameraConfig::camera_info_url)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.binning_x = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.binning_x = 4;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.binning_x = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("binning_x", "int", 0, "Number of pixels combined for horizontal binning, use device hints if zero.", "", &MVCameraConfig::binning_x)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("binning_x", "int", 0, "Number of pixels combined for horizontal binning, use device hints if zero.", "", &MVCameraConfig::binning_x)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.binning_y = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.binning_y = 4;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.binning_y = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("binning_y", "int", 0, "Number of pixels combined for vertical binning, use device hints if zero.", "", &MVCameraConfig::binning_y)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("binning_y", "int", 0, "Number of pixels combined for vertical binning, use device hints if zero.", "", &MVCameraConfig::binning_y)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.roi_width = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.roi_width = 5000;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.roi_width = 5000;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("roi_width", "int", 0, "Width of Region of Interest in unbinned pixels, full width if zero.", "", &MVCameraConfig::roi_width)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("roi_width", "int", 0, "Width of Region of Interest in unbinned pixels, full width if zero.", "", &MVCameraConfig::roi_width)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.roi_height = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.roi_height = 5000;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.roi_height = 5000;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("roi_height", "int", 0, "Height of Region of Interest in unbinned pixels, full height if zero.", "", &MVCameraConfig::roi_height)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("roi_height", "int", 0, "Height of Region of Interest in unbinned pixels, full height if zero.", "", &MVCameraConfig::roi_height)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.x_offset = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.x_offset = 5000;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.x_offset = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("x_offset", "int", 0, "Horizontal offset for left side of ROI in unbinned pixels.", "", &MVCameraConfig::x_offset)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("x_offset", "int", 0, "Horizontal offset for left side of ROI in unbinned pixels.", "", &MVCameraConfig::x_offset)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.y_offset = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.y_offset = 5000;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.y_offset = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("y_offset", "int", 0, "Vertical offset for top of ROI in unbinned pixels.", "", &MVCameraConfig::y_offset)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("y_offset", "int", 0, "Vertical offset for top of ROI in unbinned pixels.", "", &MVCameraConfig::y_offset)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.color_coding = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.color_coding = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.color_coding = "auto";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("color_coding", "str", 0, "Color coding", "{'enum_description': 'color coding methods', 'enum': [{'srcline': 112, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'mono8'}, {'srcline': 113, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'mono16'}, {'srcline': 114, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'raw8', 'ctype': 'std::string', 'type': 'str', 'name': 'raw8'}, {'srcline': 115, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'bgr8', 'ctype': 'std::string', 'type': 'str', 'name': 'bgr8'}, {'srcline': 116, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'bgra8', 'ctype': 'std::string', 'type': 'str', 'name': 'bgra8'}, {'srcline': 117, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'bgr16', 'ctype': 'std::string', 'type': 'str', 'name': 'bgr16'}, {'srcline': 118, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'auto', 'ctype': 'std::string', 'type': 'str', 'name': 'auto'}]}", &MVCameraConfig::color_coding)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("color_coding", "str", 0, "Color coding", "{'enum_description': 'color coding methods', 'enum': [{'srcline': 112, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'mono8', 'ctype': 'std::string', 'type': 'str', 'name': 'mono8'}, {'srcline': 113, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'mono16', 'ctype': 'std::string', 'type': 'str', 'name': 'mono16'}, {'srcline': 114, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'raw8', 'ctype': 'std::string', 'type': 'str', 'name': 'raw8'}, {'srcline': 115, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'bgr8', 'ctype': 'std::string', 'type': 'str', 'name': 'bgr8'}, {'srcline': 116, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'bgra8', 'ctype': 'std::string', 'type': 'str', 'name': 'bgra8'}, {'srcline': 117, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'bgr16', 'ctype': 'std::string', 'type': 'str', 'name': 'bgr16'}, {'srcline': 118, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'auto', 'ctype': 'std::string', 'type': 'str', 'name': 'auto'}]}", &MVCameraConfig::color_coding)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.bayer_method = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.bayer_method = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.bayer_method = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("bayer_method", "str", 3, "Bayer decoding method (default: ROS image_proc).", "{'enum_description': 'Bayer method', 'enum': [{'srcline': 127, 'description': 'Decode via ROS image_proc', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': '', 'ctype': 'std::string', 'type': 'str', 'name': 'image_proc'}, {'srcline': 128, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'DownSample', 'ctype': 'std::string', 'type': 'str', 'name': 'DownSample'}, {'srcline': 129, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Simple', 'ctype': 'std::string', 'type': 'str', 'name': 'Simple'}, {'srcline': 130, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Bilinear', 'ctype': 'std::string', 'type': 'str', 'name': 'Bilinear'}, {'srcline': 131, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'HQ', 'ctype': 'std::string', 'type': 'str', 'name': 'HQ'}, {'srcline': 132, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'VNG', 'ctype': 'std::string', 'type': 'str', 'name': 'VNG'}, {'srcline': 133, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'AHD', 'ctype': 'std::string', 'type': 'str', 'name': 'AHD'}]}", &MVCameraConfig::bayer_method)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("bayer_method", "str", 3, "Bayer decoding method (default: ROS image_proc).", "{'enum_description': 'Bayer method', 'enum': [{'srcline': 127, 'description': 'Decode via ROS image_proc', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': '', 'ctype': 'std::string', 'type': 'str', 'name': 'image_proc'}, {'srcline': 128, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'DownSample', 'ctype': 'std::string', 'type': 'str', 'name': 'DownSample'}, {'srcline': 129, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Simple', 'ctype': 'std::string', 'type': 'str', 'name': 'Simple'}, {'srcline': 130, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Bilinear', 'ctype': 'std::string', 'type': 'str', 'name': 'Bilinear'}, {'srcline': 131, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'HQ', 'ctype': 'std::string', 'type': 'str', 'name': 'HQ'}, {'srcline': 132, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'VNG', 'ctype': 'std::string', 'type': 'str', 'name': 'VNG'}, {'srcline': 133, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'AHD', 'ctype': 'std::string', 'type': 'str', 'name': 'AHD'}]}", &MVCameraConfig::bayer_method)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.exposure = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.exposure = 255;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.exposure = 100;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("exposure", "int", 0, "Auto exposure value .", "", &MVCameraConfig::exposure)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<int>("exposure", "int", 0, "Auto exposure value .", "", &MVCameraConfig::exposure)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.shutter_auto = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.shutter_auto = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.shutter_auto = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("shutter_auto", "bool", 0, "Shutter control state.", "", &MVCameraConfig::shutter_auto)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("shutter_auto", "bool", 0, "Shutter control state.", "", &MVCameraConfig::shutter_auto)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.shutter_auto_min = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.shutter_auto_min = 0.1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.shutter_auto_min = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("shutter_auto_min", "double", 0, "Min shutter time [s] in auto mode.", "", &MVCameraConfig::shutter_auto_min)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("shutter_auto_min", "double", 0, "Min shutter time [s] in auto mode.", "", &MVCameraConfig::shutter_auto_min)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.shutter_auto_max = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.shutter_auto_max = 0.1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.shutter_auto_max = 0.1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("shutter_auto_max", "double", 0, "Max shutter time [s] in auto mode", "", &MVCameraConfig::shutter_auto_max)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("shutter_auto_max", "double", 0, "Max shutter time [s] in auto mode", "", &MVCameraConfig::shutter_auto_max)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.shutter = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.shutter = 0.1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.shutter = 0.005;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("shutter", "double", 0, "Shutter time [s].", "", &MVCameraConfig::shutter)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("shutter", "double", 0, "Shutter time [s].", "", &MVCameraConfig::shutter)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.gain_auto = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.gain_auto = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.gain_auto = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("gain_auto", "bool", 0, "Gain control state.", "", &MVCameraConfig::gain_auto)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("gain_auto", "bool", 0, "Gain control state.", "", &MVCameraConfig::gain_auto)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.gain_auto_min = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.gain_auto_min = 12.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.gain_auto_min = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("gain_auto_min", "double", 0, "Min relative circuit gain [dB] in auto mode.", "", &MVCameraConfig::gain_auto_min)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("gain_auto_min", "double", 0, "Min relative circuit gain [dB] in auto mode.", "", &MVCameraConfig::gain_auto_min)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.gain_auto_max = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.gain_auto_max = 12.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.gain_auto_max = 12.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("gain_auto_max", "double", 0, "Max relative circuit gain [dB] in auto mode.", "", &MVCameraConfig::gain_auto_max)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("gain_auto_max", "double", 0, "Max relative circuit gain [dB] in auto mode.", "", &MVCameraConfig::gain_auto_max)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.gain = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.gain = 12.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.gain = 0.0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("gain", "double", 0, "Relative circuit gain [dB] ", "", &MVCameraConfig::gain)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<double>("gain", "double", 0, "Relative circuit gain [dB] ", "", &MVCameraConfig::gain)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.auto_control_speed = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.auto_control_speed = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.auto_control_speed = "Medium";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("auto_control_speed", "str", 0, "Control speed for automatic features", "{'enum_description': 'Control speed for automatic features', 'enum': [{'srcline': 149, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Slow', 'ctype': 'std::string', 'type': 'str', 'name': 'acs_slow'}, {'srcline': 150, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Medium', 'ctype': 'std::string', 'type': 'str', 'name': 'acs_medium'}, {'srcline': 151, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fast', 'ctype': 'std::string', 'type': 'str', 'name': 'acs_fast'}]}", &MVCameraConfig::auto_control_speed)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("auto_control_speed", "str", 0, "Control speed for automatic features", "{'enum_description': 'Control speed for automatic features', 'enum': [{'srcline': 149, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Slow', 'ctype': 'std::string', 'type': 'str', 'name': 'acs_slow'}, {'srcline': 150, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Medium', 'ctype': 'std::string', 'type': 'str', 'name': 'acs_medium'}, {'srcline': 151, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fast', 'ctype': 'std::string', 'type': 'str', 'name': 'acs_fast'}]}", &MVCameraConfig::auto_control_speed)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.auto_query_values = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.auto_query_values = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.auto_query_values = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("auto_query_values", "bool", 0, "Queries settings that are auto controlled.", "", &MVCameraConfig::auto_query_values)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("auto_query_values", "bool", 0, "Queries settings that are auto controlled.", "", &MVCameraConfig::auto_query_values)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.hdr_mode = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.hdr_mode = "";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.hdr_mode = "off";
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("hdr_mode", "str", 0, "HDR mode", "{'enum_description': 'Enable HDR / set HDR mode', 'enum': [{'srcline': 195, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'off', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_off'}, {'srcline': 196, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed0', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed0'}, {'srcline': 197, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed1', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed1'}, {'srcline': 198, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed2', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed2'}, {'srcline': 199, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed3', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed3'}, {'srcline': 200, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed4', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed4'}, {'srcline': 201, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed5', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed5'}, {'srcline': 202, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed6', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed6'}, {'srcline': 203, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'User', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_user'}]}", &MVCameraConfig::hdr_mode)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<std::string>("hdr_mode", "str", 0, "HDR mode", "{'enum_description': 'Enable HDR / set HDR mode', 'enum': [{'srcline': 195, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'off', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_off'}, {'srcline': 196, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed0', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed0'}, {'srcline': 197, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed1', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed1'}, {'srcline': 198, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed2', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed2'}, {'srcline': 199, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed3', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed3'}, {'srcline': 200, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed4', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed4'}, {'srcline': 201, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed5', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed5'}, {'srcline': 202, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'Fixed6', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_fixed6'}, {'srcline': 203, 'description': '', 'srcfile': '../cfg/mv_camera.cfg', 'cconsttype': 'const char * const', 'value': 'User', 'ctype': 'std::string', 'type': 'str', 'name': 'hdr_user'}]}", &MVCameraConfig::hdr_mode)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.use_ros_time = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.use_ros_time = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.use_ros_time = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("use_ros_time", "bool", 3, "Timestamp Image and CameraInfo using ros::Time::now()", "", &MVCameraConfig::use_ros_time)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("use_ros_time", "bool", 3, "Timestamp Image and CameraInfo using ros::Time::now()", "", &MVCameraConfig::use_ros_time)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __min__.embed_image_info = 0;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __max__.embed_image_info = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __default__.embed_image_info = 1;
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("embed_image_info", "bool", 3, "Embed extra info into the image data", "", &MVCameraConfig::embed_image_info)));
//#line 259 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(MVCameraConfig::AbstractParamDescriptionConstPtr(new MVCameraConfig::ParamDescription<bool>("embed_image_info", "bool", 3, "Embed extra info into the image data", "", &MVCameraConfig::embed_image_info)));
//#line 233 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      Default.convertParams();
//#line 233 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator.py"
      __group_descriptions__.push_back(MVCameraConfig::AbstractGroupDescriptionConstPtr(new MVCameraConfig::GroupDescription<MVCameraConfig::DEFAULT, MVCameraConfig>(Default)));
//#line 353 "/opt/ros/indigo/share/dynamic_reconfigure/templates/ConfigType.h.template"

      for (std::vector<MVCameraConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<MVCameraConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<MVCameraConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    MVCameraConfig __max__;
    MVCameraConfig __min__;
    MVCameraConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const MVCameraConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static MVCameraConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &MVCameraConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const MVCameraConfig &MVCameraConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const MVCameraConfig &MVCameraConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const MVCameraConfig &MVCameraConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<MVCameraConfig::AbstractParamDescriptionConstPtr> &MVCameraConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<MVCameraConfig::AbstractGroupDescriptionConstPtr> &MVCameraConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const MVCameraConfigStatics *MVCameraConfig::__get_statics__()
  {
    const static MVCameraConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = MVCameraConfigStatics::get_instance();
    
    return statics;
  }

//#line 61 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_6M = 6.0;
//#line 62 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_8M = 8.0;
//#line 63 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_10M = 10.0;
//#line 64 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_13M5 = 13.5;
//#line 65 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_20M = 20.0;
//#line 66 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_24M = 24.0;
//#line 67 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_27M = 27.0;
//#line 68 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_32M = 32.0;
//#line 69 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_37M6 = 37.6;
//#line 70 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_40M = 40.0;
//#line 71 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_66M = 66.0;
//#line 72 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_50M = 50.0;
//#line 73 "../cfg/mv_camera.cfg"
      const double MVCamera_pixel_clock_57M6 = 57.6;
//#line 112 "../cfg/mv_camera.cfg"
      const char * const MVCamera_mono8 = "mono8";
//#line 113 "../cfg/mv_camera.cfg"
      const char * const MVCamera_mono16 = "mono16";
//#line 114 "../cfg/mv_camera.cfg"
      const char * const MVCamera_raw8 = "raw8";
//#line 115 "../cfg/mv_camera.cfg"
      const char * const MVCamera_bgr8 = "bgr8";
//#line 116 "../cfg/mv_camera.cfg"
      const char * const MVCamera_bgra8 = "bgra8";
//#line 117 "../cfg/mv_camera.cfg"
      const char * const MVCamera_bgr16 = "bgr16";
//#line 118 "../cfg/mv_camera.cfg"
      const char * const MVCamera_auto = "auto";
//#line 127 "../cfg/mv_camera.cfg"
      const char * const MVCamera_image_proc = "";
//#line 128 "../cfg/mv_camera.cfg"
      const char * const MVCamera_DownSample = "DownSample";
//#line 129 "../cfg/mv_camera.cfg"
      const char * const MVCamera_Simple = "Simple";
//#line 130 "../cfg/mv_camera.cfg"
      const char * const MVCamera_Bilinear = "Bilinear";
//#line 131 "../cfg/mv_camera.cfg"
      const char * const MVCamera_HQ = "HQ";
//#line 132 "../cfg/mv_camera.cfg"
      const char * const MVCamera_VNG = "VNG";
//#line 133 "../cfg/mv_camera.cfg"
      const char * const MVCamera_AHD = "AHD";
//#line 141 "../cfg/mv_camera.cfg"
      const int MVCamera_Off = 0;
//#line 142 "../cfg/mv_camera.cfg"
      const int MVCamera_Query = 1;
//#line 143 "../cfg/mv_camera.cfg"
      const int MVCamera_Auto = 2;
//#line 144 "../cfg/mv_camera.cfg"
      const int MVCamera_Manual = 3;
//#line 145 "../cfg/mv_camera.cfg"
      const int MVCamera_OnePush = 4;
//#line 146 "../cfg/mv_camera.cfg"
      const int MVCamera_None = 5;
//#line 149 "../cfg/mv_camera.cfg"
      const char * const MVCamera_acs_slow = "Slow";
//#line 150 "../cfg/mv_camera.cfg"
      const char * const MVCamera_acs_medium = "Medium";
//#line 151 "../cfg/mv_camera.cfg"
      const char * const MVCamera_acs_fast = "Fast";
//#line 195 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_off = "off";
//#line 196 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_fixed0 = "Fixed0";
//#line 197 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_fixed1 = "Fixed1";
//#line 198 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_fixed2 = "Fixed2";
//#line 199 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_fixed3 = "Fixed3";
//#line 200 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_fixed4 = "Fixed4";
//#line 201 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_fixed5 = "Fixed5";
//#line 202 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_fixed6 = "Fixed6";
//#line 203 "../cfg/mv_camera.cfg"
      const char * const MVCamera_hdr_user = "User";
}

#endif // __MVCAMERARECONFIGURATOR_H__
